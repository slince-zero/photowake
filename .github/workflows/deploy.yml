name: Deploy to Production

on:
  push:
    branches: [main] # main 分支有推送时触发
  pull_request:
    branches: [main] # 有 PR 到 main 分支时触发

# 环境变量
env:
  DOCKER_REGISTRY: ghcr.io # GitHub Container Registry
  # ${{ github.repository }} 仓库全名 (用户名/仓库名)
  IMAGE_NAME_FRONTEND: ${{ github.repository }}-frontend
  IMAGE_NAME_BACKEND: ${{ github.repository }}-backend

jobs:
  # 构建阶段
  build:
    # needs: test # 依赖测试作业
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # 只有 main 分支有推送时触发
    steps:
      - uses: actions/checkout@v3

      # 将镜像名称转换为小写
      - name: Convert image names to lowercase
        run: |
          echo "IMAGE_NAME_FRONTEND=${IMAGE_NAME_FRONTEND,,}" >> $GITHUB_ENV
          echo "IMAGE_NAME_BACKEND=${IMAGE_NAME_BACKEND,,}" >> $GITHUB_ENV

      # 登录到 GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Github 自动提供的 token

      # 构建并推送前端镜像
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./web
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest
          # 不支持缓存，后续考虑添加本地缓存

      # 构建并推送后端镜像
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest

  # 部署阶段
  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      # 配置 SSH
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 添加服务器到已知主机
      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # 部署到服务器
      - name: Deploy to server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'ENDSSH'
            cd /home/PhotoWake
            
            echo "Current directory: $(pwd)"
            
            # 拉取最新镜像
            docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest
            docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest
            
            # 更新 docker-compose.yml 中的镜像标签
            sed -i 's|image: .*frontend:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest|' docker-compose.yml
            sed -i 's|image: .*backend:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest|' docker-compose.yml
            
            # 重启服务
            docker-compose down
            docker-compose up -d
            
            # 清理未使用的镜像
            docker image prune -f
          ENDSSH

      # 健康检查
      - name: Health check
        run: |
          sleep 30  # 等待服务启动
          curl -f http://${{ secrets.SERVER_IP }}/health || exit 1